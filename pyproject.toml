[build-system]
requires = ["hatchling==1.26.3", "hatch-vcs"]
build-backend = "hatchling.build"
#requires = ["setuptools>=61.0", "wheel"]
#build-backend = "setuptools.build_meta"


[project]
name = "driada"
version = "0.3.0"
authors = [
  { name="Nikita Pospelov", email="pospelov.na14@physics.msu.ru" },
]
description = "Population and element-level analysis of neuronal computations"
readme = "README.md"
requires-python = ">=3.8"

dependencies = [
    "pywavelets",
    "openpyxl",
    "chardet",
    "imageio",
    "h5py",
    "gitpython",
    "umap-learn",
    "fbm",
    "numpy>=1.24.3",
    "scikit-learn>=1.3.0",
    "pandas>=2.1.4",
    "matplotlib>=3.7.0",
    "networkx>=3.1",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "scipy>=1.11.4",
    "tqdm>=4.66.1",
    "numba>=0.59.0",
    "pydrive2>=1.19.0",
    "pytz>=2023.3.post1",
    "wget>=3.2",
    "gdown>=5.1.0",
    "requests>=2.31.0",
    "regex>=2023.10.3",
    "beautifulsoup4>=4.12.3",
    "seaborn>=0.12.2",
    #"setuptools~=68.2.2",
    "ssqueezepy>=0.6.5",
    "cvxpy>=1.4.2",
    "pynndescent>=0.5.10",
    "pydiffmap>=0.2.0.1",
    "psutil>=5.9.0"
]

classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]

[project.optional-dependencies]
gpu = ["torch",
       "torchvision",
       "torchaudio",
       "torch-mist"]


[project.urls]
Homepage = "https://github.com/iabs-neuro/driada"
Issues = "https://github.com/iabs-neuro/driada/issues"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--cov=driada",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-report=term:skip-covered",
    "--cov-fail-under=90",
    "--no-cov-on-fail",
    "-v"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "integration: marks integration tests"
]

[tool.coverage.run]
source = ["driada"]
omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/setup.py",
    "*/conftest.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
precision = 2
show_missing = true
skip_covered = false
sort = "Cover"

[tool.coverage.html]
directory = "htmlcov"